let transactions = JSON.parse(localStorage.getItem("transactions")) || [];
let chartPie, chartBar;

// === –≠–ú–û–î–ó–ò –ü–û –ö–ê–¢–ï–ì–û–†–ò–Ø–ú ===
function getCategoryEmoji(category) {
  const emojis = {
    –ï–¥–∞: "üçé",
    –¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç: "üöå",
    –ñ–∏–ª—å—ë: "üè†",
    –ü–æ–∫—É–ø–∫–∏: "üõçÔ∏è",
    –†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è: "üé¨",
    –ö–æ–º–º—É–Ω–∞–ª—å–Ω—ã–µ: "üí°",
    –ó–¥–æ—Ä–æ–≤—å–µ: "üè•",
    –£—á—ë–±–∞: "üìö",
    –ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è: "‚úàÔ∏è",
    –ü—Ä–æ—á–µ–µ: "ü§∑",
  };
  // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —ç–º–æ–¥–∑–∏ + –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
  return (emojis[category] || "ü§∑") + ` ${category}`;
}

// === –°–û–•–†–ê–ù–ï–ù–ò–ï ===
function saveData() {
  localStorage.setItem("transactions", JSON.stringify(transactions));
}

// === –î–û–ë–ê–í–õ–ï–ù–ò–ï ===
function addTransaction() {
  const title = document.getElementById("title").value.trim();
  // –ò—Å–ø–æ–ª—å–∑—É–µ–º Number() –≤–º–µ—Å—Ç–æ parseFloat() –¥–ª—è –±–æ–ª—å—à–µ–π —Ç–æ—á–Ω–æ—Å—Ç–∏
  const amount = Number(document.getElementById("amount").value);
  const type = document.getElementById("type").value;
  const category = document.getElementById("category").value;
  // –ë–æ–ª–µ–µ –Ω–∞–¥—ë–∂–Ω—ã–π —Å–ø–æ—Å–æ–± –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–π –¥–∞—Ç—ã
  const date =
    document.getElementById("date").value ||
    new Date().toISOString().slice(0, 10);

  if (!title || !amount || isNaN(amount) || amount <= 0) {
    alert("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—É—é —Å—É–º–º—É!");
    return;
  }

  transactions.push({ id: Date.now(), title, amount, type, category, date });
  saveData();
  clearInputs();
  render();
}

function clearInputs() {
  document.getElementById("title").value = "";
  document.getElementById("amount").value = "";
  // –°–±—Ä–æ—Å –ø–æ–ª—è –¥–∞—Ç—ã –Ω–∞ –ø—É—Å—Ç–æ–µ –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
  document.getElementById("date").value = "";
}

// === –£–î–ê–õ–ï–ù–ò–ï ===
function deleteTransaction(id) {
  transactions = transactions.filter((t) => t.id !== id);
  saveData();
  render();
}

function clearAll() {
  if (
    confirm(
      "–í–ù–ò–ú–ê–ù–ò–ï! –í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –í–°–ï –¥–∞–Ω–Ω—ã–µ? –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–æ–±—Ä–∞—Ç–∏–º–æ."
    )
  ) {
    transactions = [];
    saveData();
    render();
  }
}

// === –§–ò–õ–¨–¢–†–ê–¶–ò–Ø ===
function getFilteredTransactions() {
  const filter = document.getElementById("filter").value;
  const search = document.getElementById("searchBox").value.toLowerCase();
  const now = new Date();
  const todayISO = now.toISOString().slice(0, 10);
  const currentYear = now.getFullYear();
  const currentMonth = now.getMonth();

  return transactions.filter((t) => {
    // –£–ª—É—á—à–µ–Ω–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞: –∏—â–µ—Ç –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏, –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ò–õ–ò —Å—É–º–º–µ
    const matchSearch =
      t.title.toLowerCase().includes(search) ||
      t.category.toLowerCase().includes(search) ||
      t.amount.toString().includes(search);

    if (!matchSearch) return false;

    if (filter === "today") {
      return t.date === todayISO;
    } else if (filter === "month") {
      const d = new Date(t.date);
      return d.getFullYear() === currentYear && d.getMonth() === currentMonth;
    }
    return true; // "all"
  });
}

// === –û–¢–†–ò–°–û–í–ö–ê ===
function render() {
  const list = document.getElementById("list");
  const filtered = getFilteredTransactions();
  list.innerHTML = "";

  let balance = 0;

  filtered.forEach((t) => {
    const row = document.createElement("tr");
    // –≠–º–æ–¥–∑–∏ –∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ç–µ–ø–µ—Ä—å –≤ –æ–¥–Ω–æ–π —è—á–µ–π–∫–µ
    const categoryDisplay = getCategoryEmoji(t.category);
    const sign = t.type === "income" ? "+" : "-";

    row.innerHTML = `
      <td>${t.date}</td>
      <td>${t.title}</td>
      <td>${categoryDisplay}</td> 
      <td class="${t.type}">${sign}${t.amount.toFixed(2)} ‚ÇΩ</td>
      <td><button class="delete-btn" onclick="deleteTransaction(${
        t.id
      })">üóëÔ∏è</button></td>
    `;
    list.appendChild(row);
    balance += t.type === "income" ? t.amount : -t.amount;
  });

  document.getElementById("balance").textContent = `–ë–∞–ª–∞–Ω—Å: ${balance.toFixed(
    2
  )} ‚ÇΩ`;
  renderCharts(filtered);
}

// === –ì–†–ê–§–ò–ö–ò ===
function renderCharts(data) {
  // –£–Ω–∏—á—Ç–æ–∂–µ–Ω–∏–µ —Å—Ç–∞—Ä—ã—Ö –≥—Ä–∞—Ñ–∏–∫–æ–≤ –ø–µ—Ä–µ–¥ –ø–µ—Ä–µ—Ä–∏—Å–æ–≤–∫–æ–π
  if (chartPie) chartPie.destroy();
  if (chartBar) chartBar.destroy();

  const ctxPie = document.getElementById("chart");
  const ctxBar = document.getElementById("chartBar");

  if (!ctxPie || !ctxBar) return;

  // –ö—Ä—É–≥–æ–≤–∞—è –¥–∏–∞–≥—Ä–∞–º–º–∞ (–†–∞—Å—Ö–æ–¥—ã)
  const expenseCategories = {};
  data
    .filter((t) => t.type === "expense")
    .forEach((t) => {
      // –°—É–º–º—ã –æ–∫—Ä—É–≥–ª—è—é—Ç—Å—è, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –ø—Ä–æ–±–ª–µ–º —Å –ø–ª–∞–≤–∞—é—â–µ–π —Ç–æ—á–∫–æ–π
      expenseCategories[t.category] =
        (expenseCategories[t.category] || 0) + t.amount;
    });

  const chartContainerPie = ctxPie.parentElement;

  if (Object.keys(expenseCategories).length) {
    // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π canvas, –µ—Å–ª–∏ –æ–Ω –±—ã–ª –∑–∞–º–µ–Ω–µ–Ω —Ç–µ–∫—Å—Ç–æ–º
    if (chartContainerPie.querySelector("p")) {
      chartContainerPie.innerHTML =
        '<canvas id="chart" width="400" height="300"></canvas>';
    }
    const labels = Object.keys(expenseCategories).map(getCategoryEmoji);

    chartPie = new Chart(ctxPie, {
      type: "pie",
      data: {
        labels,
        datasets: [
          {
            data: Object.values(expenseCategories).map((val) =>
              Number(val.toFixed(2))
            ), // –û–∫—Ä—É–≥–ª–µ–Ω–∏–µ –¥–ª—è –¥–∞–Ω–Ω—ã—Ö
            // –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –ø–∞–ª–∏—Ç—Ä–∞ –¥–ª—è –±–æ–ª—å—à–µ–≥–æ —á–∏—Å–ª–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
            backgroundColor: [
              "#FF6384",
              "#36A2EB",
              "#FFCE56",
              "#4BC0C0",
              "#9966FF",
              "#FF9F40",
              "#A8DADC",
              "#457B9D",
              "#1D3557",
              "#2A9D8F",
              "#E9C46A",
              "#F4A261",
              "#E63946",
              "#F1FAEE",
              "#A8DADC",
            ],
          },
        ],
      },
      options: {
        responsive: true,
        maintainAspectRatio: false,
        plugins: { legend: { position: "bottom" } },
      },
    });
  } else {
    // –ï—Å–ª–∏ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ä–∞—Å—Ö–æ–¥–æ–≤, –æ—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä (–¥–ª—è –ø—É—Å—Ç–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è)
    chartContainerPie.innerHTML =
      '<p style="text-align: center; color: #777;">–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –ø–æ —Ä–∞—Å—Ö–æ–¥–∞–º –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ñ–∏–ª—å—Ç—Ä–∞.</p>';
  }

  // –°—Ç–æ–ª–±—á–∞—Ç–∞—è –¥–∏–∞–≥—Ä–∞–º–º–∞ (–î–æ—Ö–æ–¥—ã/–†–∞—Å—Ö–æ–¥—ã –ø–æ –º–µ—Å—è—Ü–∞–º)
  const months = {};
  data.forEach((t) => {
    const d = new Date(t.date);
    // –ö–ª—é—á –≤ —Ñ–æ—Ä–º–∞—Ç–µ YYYY-MM
    const key = `${d.getFullYear()}-${String(d.getMonth() + 1).padStart(
      2,
      "0"
    )}`;
    if (!months[key]) months[key] = { income: 0, expense: 0 };
    months[key][t.type] += t.amount;
  });

  // –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ –∫–ª—é—á—É (YYYY-MM)
  const sortedKeys = Object.keys(months).sort();
  const sortedMonths = {};
  sortedKeys.forEach((k) => (sortedMonths[k] = months[k]));

  const chartContainerBar = ctxBar.parentElement;

  if (Object.keys(sortedMonths).length) {
    // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π canvas, –µ—Å–ª–∏ –æ–Ω –±—ã–ª –∑–∞–º–µ–Ω–µ–Ω —Ç–µ–∫—Å—Ç–æ–º
    if (chartContainerBar.querySelector("p")) {
      chartContainerBar.innerHTML =
        '<canvas id="chartBar" width="400" height="300"></canvas>';
    }
    // –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –∫–ª—é—á–µ–π YYYY-MM –≤ —É–¥–æ–±–æ—á–∏—Ç–∞–µ–º—ã–π —Ñ–æ—Ä–º–∞—Ç (–Ω–∞–ø—Ä–∏–º–µ—Ä, 03/2025)
    const formattedLabels = sortedKeys.map((key) => {
      const [year, month] = key.split("-");
      return `${month}/${year}`;
    });

    chartBar = new Chart(ctxBar, {
      type: "bar",
      data: {
        labels: formattedLabels,
        datasets: [
          {
            label: "–î–æ—Ö–æ–¥—ã",
            data: Object.values(sortedMonths).map((m) =>
              Number(m.income.toFixed(2))
            ),
            backgroundColor: "#36A2EB",
          },
          {
            label: "–†–∞—Å—Ö–æ–¥—ã",
            data: Object.values(sortedMonths).map((m) =>
              Number(m.expense.toFixed(2))
            ),
            backgroundColor: "#FF6384",
          },
        ],
      },
      options: {
        responsive: true,
        maintainAspectRatio: false,
        scales: { y: { beginAtZero: true } },
        plugins: { legend: { position: "bottom" } },
      },
    });
  } else {
    // –ï—Å–ª–∏ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å—Ç–æ–ª–±—á–∞—Ç–æ–π –¥–∏–∞–≥—Ä–∞–º–º—ã
    chartContainerBar.innerHTML =
      '<p style="text-align: center; color: #777;">–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≥–∏—Å—Ç–æ–≥—Ä–∞–º–º—ã.</p>';
  }
}

// ... (–í–∞—à –∫–æ–¥ –¥–æ —ç—Ç–æ–≥–æ –º–µ—Å—Ç–∞)

// === PWA –£–°–¢–ê–ù–û–í–ö–ê ===
let deferredPrompt;
const installContainer = document.getElementById("installContainer");
const installBtn = document.getElementById("installBtn");

window.addEventListener("beforeinstallprompt", (e) => {
  e.preventDefault();
  deferredPrompt = e;
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É, –∫–∞–∫ —Ç–æ–ª—å–∫–æ –±—Ä–∞—É–∑–µ—Ä —Ä–∞–∑—Ä–µ—à–∞–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–∫—É
  installContainer.style.display = "block";
  console.log("PWA: –°–æ–±—ã—Ç–∏–µ 'beforeinstallprompt' —Å—Ä–∞–±–æ—Ç–∞–ª–æ.");
});

installBtn?.addEventListener("click", async () => {
  if (!deferredPrompt) {
    alert("–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É.");
    return;
  }

  installContainer.style.display = "none";
  deferredPrompt.prompt();

  const { outcome } = await deferredPrompt.userChoice;

  if (outcome === "accepted") {
    console.log("PWA: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∏–Ω—è–ª —É—Å—Ç–∞–Ω–æ–≤–∫—É.");
  }
  deferredPrompt = null;
});

// –ï—Å–ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–∏–ª–∏, —Å–∫—Ä—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É
window.addEventListener("appinstalled", () => {
  installContainer.style.display = "none";
  console.log("PWA: –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ.");
});

// === SERVICE WORKER ===
if ("serviceWorker" in navigator) {
  window.addEventListener("load", () => {
    // üî• –û–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–æ–≤–µ—Ä–µ–Ω–æ: –∏–º—è service-worker.js
    navigator.serviceWorker
      .register("service-worker.js")
      .then((reg) =>
        console.log("SW: –£—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω! –û–±–ª–∞—Å—Ç—å: ", reg.scope)
      )
      .catch((err) => console.error("SW: –û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:", err));
  });
}

// === –°–¢–ê–†–¢ ===
document.addEventListener("DOMContentLoaded", render);
